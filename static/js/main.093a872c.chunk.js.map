{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","allGoods","Alphabet","sort","Length","good1","good2","length","NoSort","reverse","getPreparedGoods","handleSort","field","className","type","cn","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAYKA,E,oFAAAA,K,oBAAAA,E,gBAAAA,E,WAAAA,M,KAME,IAAMC,EAAyB,CACpC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6BK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA7BR,SACEC,EADF,GAGG,IACGC,EAFFN,EACF,EADEA,UAAWE,EACb,EADaA,WAIb,OAAQF,GACN,KAAKJ,EAASW,SACZD,EAAW,YAAID,GAAOG,OACtB,MACF,KAAKZ,EAASa,OACZH,EAAW,YAAID,GAAOG,MAAK,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAClE,MACF,KAAKhB,EAASiB,OACd,QACEP,EAAQ,YAAOD,GAQnB,OAJIH,GACFI,EAASQ,UAGJR,EAMcS,CAAiBlB,EAAiB,CACrDG,YACAE,eAGF,SAASc,EAAWC,GAClB,OAAO,kBAAMhB,EAAagB,IAY5B,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYpB,IAAcJ,EAASW,WAErCc,QAASL,EAAWpB,EAASW,UAL/B,iCAUA,wBACEY,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYpB,IAAcJ,EAASa,SAErCY,QAASL,EAAWpB,EAASa,QAL/B,4BAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAalB,IAEfmB,QArCc,WACpBlB,GAAeD,IA+BX,qBAUCoB,KAAKC,UAAUnB,KAAkBkB,KAAKC,UAAU1B,IAC/C,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBpB,EAAa,IACbE,GAAc,IAqCR,sBAUJ,6BACGC,EAAaoB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCzHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.093a872c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\ntype Goods = string[];\n\ninterface FilterParams{\n  sortField: string;\n  isReversed: boolean;\n}\n\nenum SortType{\n  Alphabet = 'alphabet',\n  Length = 'length',\n  NoSort = '',\n}\n\nexport const goodsFromServer: Goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(\n  goods: Goods,\n  { sortField, isReversed }: FilterParams,\n) {\n  let allGoods;\n\n  switch (sortField) {\n    case SortType.Alphabet:\n      allGoods = [...goods].sort();\n      break;\n    case SortType.Length:\n      allGoods = [...goods].sort((good1, good2) => good1.length - good2.length);\n      break;\n    case SortType.NoSort:\n    default:\n      allGoods = [...goods];\n      break;\n  }\n\n  if (isReversed) {\n    allGoods.reverse();\n  }\n\n  return allGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  function handleSort(field: SortType) {\n    return () => setSortField(field);\n  }\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.Alphabet,\n          })}\n          onClick={handleSort(SortType.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.Length,\n          })}\n          onClick={handleSort(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {JSON.stringify(visibleGoods) !== JSON.stringify(goodsFromServer) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}